# Code generated by github.com/lolopinto/ent/ent, DO NOT edit. 


interface Connection {
    edges: [Edge!]
    nodes: [Node!]
}

type Contact implements Node {
    allowList: [User!]!
    emailAddress: String!
    firstName: String!
    id: ID!
    lastName: String!
    userID: String!
}

interface Edge {
    node: Node!
}

type Event implements Node {
    endTime: Time!
    id: ID!
    invited: [User!]!
    location: String!
    name: String!
    startTime: Time!
    user: User
}

type EventsConnection implements Connection {
    edges: [EventsEdge!]
    nodes: [Event!]
}

type EventsEdge implements Edge {
    node: Event!
}

type Mutation {
    userCreate(input: UserCreateInput!): UserCreateResponse
}

interface Node {
    id: ID!
}

type Query {
    contact(id: ID!): Contact
    event(id: ID!): Event
    user(id: ID!): User
}

type User implements Node {
    contacts: [Contact!]!
    emailAddress: String!
    events: [Event!]!
    familyMembers: [User!]!
    firstName: String!
    friends: [User!]!
    id: ID!
    invitedEvents: [Event!]!
    lastName: String!
}

input UserCreateInput {
    emailAddress: String!
    firstName: String!
    lastName: String!
}

type UserCreateResponse {
    user: User
}

type UsersConnection implements Connection {
    edges: [UsersEdge!]
    nodes: [User!]
}

type UsersEdge implements Edge {
    node: User!
}


scalar Time
