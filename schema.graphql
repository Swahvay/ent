# https://gqlgen.com/config/

interface Node {
  id: ID!
}

type PageInfo {
  startCursor: ID!
  endCursor: ID!
  hasNextPage: Boolean!
}

interface Edge {
  cursor: ID!
  node: Node!
}

interface Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [Edge!]
  nodes: [Node!]
}

type NotesEdge implements Edge {
  cursor: ID!
  node: Note!
}

type NotesConnection implements Connection {
  totalCount: Int!
  edges: [NotesEdge!]
  nodes: [Note!]
  pageInfo: PageInfo!
}

type ContactsEdge implements Edge {
  cursor: ID!
  node: Contact!
}

type ContactsConnection implements Connection {
  totalCount: Int!
  edges: [ContactsEdge!]
  nodes: [Contact!]
  pageInfo: PageInfo!
}

type User implements Node {
  id: ID!
  firstName: String!
  lastName: String!
  emailAddress: String!
  contacts: [Contact!]
  contactsConnection(first: Int, after: ID): ContactsConnection!
  notes: [Note!]
  notesConnection(first: Int, after: ID): NotesConnection!
}

type Contact implements Node {
  id: ID!
  firstName: String!
  lastName: String!
  user: User!
  contactEmails: [ContactEmail!]
  contactDates: [ContactDate!]
  contactPhoneNumbers: [ContactPhoneNumber!]
}

type ContactPhoneNumber implements Node {
  id: ID!
  phoneNumber: String!
  label: String
  contact: Contact!
}

type ContactEmail implements Node {
  id: ID!
  emailAddress: String!
  label: String
  contact: Contact!
}

type ContactDate implements Node {
  id: ID!
  month: Int!
  day: Int!
  year: Int!
  label: String
  contact: Contact!
}

type Note implements Node {
  id: ID!
  owner: User!
  contentsDelta: String!
}

type Query {
  user(id: ID): User
}